{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.34.60546",
      "templateHash": "17052645431532471515"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "swedencentral",
      "metadata": {
        "description": "The location where all resources will be deployed."
      }
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "mcpserver",
      "metadata": {
        "description": "Environment name used for resource naming"
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[format('func-{0}-{1}', parameters('environmentName'), uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the function app to create."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('st{0}{1}', replace(parameters('environmentName'), '-', ''), uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the storage account to create."
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[format('asp-{0}-{1}', parameters('environmentName'), uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the app service plan to create."
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[format('ai-{0}-{1}', parameters('environmentName'), uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the app insights resource to create."
      }
    },
    "appServicePlanSku": {
      "type": "string",
      "defaultValue": "Y1",
      "allowedValues": [
        "Y1",
        "B1",
        "S1"
      ],
      "metadata": {
        "description": "The SKU of the App Service Plan."
      }
    },
    "mcpAuthEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Whether to enable MCP authentication for the function"
      }
    },
    "mcpAllowedOperations": {
      "type": "string",
      "defaultValue": "getBusinessData,triggerLogicApp,callInternalApi,list_operations,get_openapi_spec",
      "metadata": {
        "description": "Comma-separated list of allowed MCP operations"
      }
    },
    "createdOn": {
      "type": "string",
      "defaultValue": "[utcNow('yyyy-MM-dd')]",
      "metadata": {
        "description": "The creation date for resource tagging"
      }
    }
  },
  "variables": {
    "uniqueSuffix": "[uniqueString(resourceGroup().id)]",
    "commonTags": {
      "environment": "[parameters('environmentName')]",
      "application": "MCP-Server-Function",
      "createdOn": "[parameters('createdOn')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[format('log-{0}-{1}', parameters('environmentName'), variables('uniqueSuffix'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}-{1}', parameters('environmentName'), variables('uniqueSuffix')))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}-{1}', parameters('environmentName'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "sku": {
        "name": "[parameters('appServicePlanSku')]"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[format('mi-{0}-{1}', parameters('environmentName'), variables('uniqueSuffix'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "kind": "functionapp",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}-{1}', parameters('environmentName'), variables('uniqueSuffix'))))]": {}
        }
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "http20Enabled": true,
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2",
          "netFrameworkVersion": "v8.0",
          "use32BitWorkerProcess": false,
          "cors": {
            "allowedOrigins": [
              "https://portal.azure.com"
            ]
          },
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet-isolated"
            },
            {
              "name": "DOTNET_ISOLATE_TIMEOUT_SECONDS",
              "value": "60"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "MCP_AUTH_ENABLED",
              "value": "[string(parameters('mcpAuthEnabled'))]"
            },
            {
              "name": "MCP_ALLOWED_OPERATIONS",
              "value": "[parameters('mcpAllowedOperations')]"
            },
            {
              "name": "LOGIC_APP_ENDPOINT",
              "value": "https://prod-12.eastus.logic.azure.com:443/workflows/placeholder"
            },
            {
              "name": "INTERNAL_API_BASE_URL",
              "value": "https://api.internal.company.com"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}-{1}', parameters('environmentName'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    },
    "functionAppHostName": {
      "type": "string",
      "value": "[format('{0}.azurewebsites.net', parameters('functionAppName'))]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "applicationInsightsName": {
      "type": "string",
      "value": "[parameters('appInsightsName')]"
    },
    "managedIdentityId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}-{1}', parameters('environmentName'), variables('uniqueSuffix')))]"
    },
    "managedIdentityPrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}-{1}', parameters('environmentName'), variables('uniqueSuffix'))), '2023-01-31').principalId]"
    }
  }
}